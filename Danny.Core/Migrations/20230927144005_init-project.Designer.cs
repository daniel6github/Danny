// <auto-generated />
using Danny.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Danny.Core.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230927144005_init-project")]
    partial class initproject
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Danny.Core.Models.Stock", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<bool>("IsValid")
                        .HasColumnType("boolean")
                        .HasColumnName("is_valid");

                    b.Property<int>("MarketCode")
                        .HasColumnType("integer")
                        .HasColumnName("market_code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Code")
                        .HasName("pk_stocks");

                    b.ToTable("stocks", (string)null);
                });

            modelBuilder.Entity("Danny.Core.Models.Stock", b =>
                {
                    b.OwnsMany("Danny.Core.Models.Kline", "Klines", b1 =>
                        {
                            b1.Property<string>("StockCode")
                                .HasColumnType("text")
                                .HasColumnName("stock_code");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasColumnName("id");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<double>("Amount")
                                .HasColumnType("double precision")
                                .HasColumnName("amount");

                            b1.Property<double>("Chg")
                                .HasColumnType("double precision")
                                .HasColumnName("chg");

                            b1.Property<double>("Close")
                                .HasColumnType("double precision")
                                .HasColumnName("close");

                            b1.Property<double>("High")
                                .HasColumnType("double precision")
                                .HasColumnName("high");

                            b1.Property<char>("KlineType")
                                .HasColumnType("character(1)")
                                .HasColumnName("kline_type");

                            b1.Property<double>("Low")
                                .HasColumnType("double precision")
                                .HasColumnName("low");

                            b1.Property<double>("Open")
                                .HasColumnType("double precision")
                                .HasColumnName("open");

                            b1.Property<double>("Percent")
                                .HasColumnType("double precision")
                                .HasColumnName("percent");

                            b1.Property<decimal>("Timestamp")
                                .HasColumnType("numeric(20,0)")
                                .HasColumnName("timestamp");

                            b1.Property<double>("Turnoverrate")
                                .HasColumnType("double precision")
                                .HasColumnName("turnoverrate");

                            b1.Property<decimal>("Volumn")
                                .HasColumnType("numeric(20,0)")
                                .HasColumnName("volumn");

                            b1.HasKey("StockCode", "Id")
                                .HasName("pk_kline");

                            b1.ToTable("kline", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("StockCode")
                                .HasConstraintName("fk_kline_stocks_stock_temp_id");
                        });

                    b.Navigation("Klines");
                });
#pragma warning restore 612, 618
        }
    }
}
